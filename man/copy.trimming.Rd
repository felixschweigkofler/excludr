% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trimming.R
\name{copy.trimming}
\alias{copy.trimming}
\title{Copy trimming from one identifier to another}
\usage{
copy.trimming(
  ldf,
  group.by = NULL,
  copy.by,
  copy.from = NULL,
  copy.to = NULL,
  apply.to = NULL,
  apply.not.to = NULL,
  if.all = F,
  notify = T,
  report.by = NULL,
  return.report = F,
  value.col = "value"
)
}
\arguments{
\item{ldf}{A long format dataframe with one column holding the values and at least one column holding identifiers that can be used to group the values. Compare example.trial.data().}

\item{group.by}{Identifier-columns that are used to create groupings, within which the trimming-status is copied from one row to another. Defaults to NULL, which means all columns besides 'value.col' and 'copy.by' are used.}

\item{copy.by}{Identifier-column used to specify rows within each grouping from which to which the trimming status should be copied.}

\item{copy.from, copy.to}{Identifiers in the copy.by-column that specify the source-rows ('copy.from') and target-rows ('copy.to') for copying. In each grouping, if any or all (defined by 'if.all') of the source-values are NA, all target values are trimmed.}

\item{apply.to, apply.not.to}{A named list of vectors to (un)select rows. The names of the columns are specified by the element names, and the identifiers in this column to which the trimming should (not) be applied are specified by the vector. Default to NULL, which means no (un)selection is applied to any column.}

\item{if.all}{Requires that all values defined by 'copy.from' are NA, in order to copy NAs to 'copy.to'. Defaults to FALSE, which means the target-values are trimmed when any source-value is NA.}

\item{notify}{Provides progress information. Defaults to TRUE.}

\item{report.by}{Identifier-columns that are used to create groupings, for which statistics are printed when notify is TRUE. Defaults to NULL, which means one value for the entire ldf is returned.}

\item{return.report}{Adds the trimming report to the trimmed ldf in a list. Defaults to FALSE.}

\item{value.col}{Name of the column holding the values in the ldf. Defaults to 'value'.}
}
\description{
Copy the trimming-status of values (source-values) to other values (target-values), that differ only in a single identifier.
}
\examples{
# Trim the RT of example.trial.data
ldf = trim.by_interval(ldf = example.trial.data(), group.by = c('ID', 'session', 'measure'), apply.to = list(measure = 'RT'), trim = 0.1)
# Copy the trimming within the measure-column. With copy.from and copy.to being NULL, all identifiers (here: RT and ACC) are tested, and when the value of any measure-identifier in the grouping is NA, all values in the grouping (note that a grouping here includes the trial!) are set to NA
ldf2 = copy.trimming(ldf = ldf, copy.by = 'measure')
# Copy the trimming across all participants, separate for session and trial. In other words: for ALL participants, trim the value of trial x in session x if any participant has an NA-value in trial x in session x.
ldf2 = copy.trimming(ldf = ldf, group.by = c('session','trial','measure'), copy.by = 'ID', report.by = c('session','measure'))
# Without grouping by measure, ACC-values are affected as well
ldf2 = copy.trimming(ldf = ldf, group.by = c('session','trial'), copy.by = 'ID', report.by = c('session','measure'))
# Do the same, but only if ALL participants have an NA-value for a given trial (Given the data in example.trial.data(), likely no copying was applied).
ldf2 = copy.trimming(ldf = ldf, group.by = c('session','trial','measure'), copy.by = 'ID', report.by = c('session','measure'), if.all = T)
# Copy.by ID, but do not specify anything else. Column 'condition' is automatically included in 'group.by', thus more groupings exist and the effect of a single NA is thus limited to fewer rows.
ldf2 = copy.trimming(ldf = ldf, group.by = c('session','trial','measure'), copy.by = 'ID', report.by = c('session','measure','condition'), apply.not.to = list(measure = 'ACC'))
ldf2 = copy.trimming(ldf = ldf, copy.by = 'ID', report.by = c('session','measure','condition'), apply.not.to = list(measure = 'ACC'))
}
\keyword{trimming}
