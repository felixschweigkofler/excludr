% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trimming.R
\name{view.data}
\alias{view.data}
\title{Visualize the data}
\usage{
view.data(
  ldf,
  group.by,
  view = NULL,
  view.not = NULL,
  view.together = NULL,
  view.separate = NULL,
  observation = NULL,
  by.observation = F,
  sort.observation = F,
  type = "point_line",
  value.col = "value",
  add.names = NULL,
  group.sep = ".",
  label = "",
  fill = F,
  bins = 30,
  rm.legend = F
)
}
\arguments{
\item{ldf}{A long format dataframe with one column holding the values and at least one column holding identifiers that can be used to group the values. Compare example.trial.data().}

\item{group.by}{Identifier-columns that are used to create groupings that are plotted.}

\item{view.together, view.separate}{Identifier-columns from 'group.by' that are shown in a single plot vs. those that are shown in separate plots. Only one of the two can be defined. Defaults to NULL, in which case 'view.together' defaults to 'group.by' and a single plot is generated.}

\item{observation}{Identifier-column that is NOT in 'group.by' and identifies the values within each grouping. Defaults to NULL, in which case an observation-column is automatically generated.}

\item{by.observation}{Flips grouping and observation, such that observations become groupings and groupings become observations. Defaults to FALSE.}

\item{sort.observation}{Sorts observations within each grouping independently. Only relevant for point and line plots. Ticks on the x-axis will be removed. Defaults to FALSE.}

\item{type}{Implemented plot types are 'point', 'line', 'point_line', 'hist', 'density', 'violin', and 'box'. Defaults to 'point_line'.}

\item{value.col}{Name of the column holding the values in the ldf. Defaults to 'value'.}

\item{add.names}{Show the grouping-identifiers next to one datapoint of the grouping in point, line and density plots. Can be 'top', 'bottom', or 'random'. Defaults to NULL, which means names are not shown.}

\item{group.sep}{Separator used when collapsing the identifiers of multiple columns defined by 'view.together'. Affects the legend, the x-axis ticks for violinplot and boxplot, and 'add.names'. Defaults to '.'.}

\item{label}{Label for the x-axis for density plot and histogram and for the y-axis for all others. Defaults to ''.}

\item{fill}{Fill groupings with color. Not relevant for point and line plots. Defaults to FALSE.}

\item{bins}{Bin-number for histogram. Defaults to 30.}

\item{rm.legend}{Removes the legend. Defaults to FALSE.}
}
\description{
Takes an ldf, groups it, and plots the values in observation and returns number and proportion of trimmed values for each grouping for each measure
}
\examples{
# View each participant's RT for each trial. Plot each session separately
view.data(ldf = example.trial.data(seed = 1), group.by = c('ID','session','measure'), view = list(measure = 'RT'), view.separate = 'session')
# Values in each grouping were numbered automatically. To use the actual identifiers in the 'trial'-column, use observation (as trials are already numbered 1:10 and sorted accordingly, only the axis label changes in this case)
view.data(ldf = example.trial.data(seed = 1), group.by = c('ID','session','measure'), view = list(measure = 'RT'), view.separate = 'session', observation = 'trial')
# Sort the observations by value. Axis ticks therefore disappear, because points on the same point on the x-axis no longer necessarily are from the same observation.
view.data(ldf = example.trial.data(seed = 1), group.by = c('ID','session','measure'), view = list(measure = 'RT'), view.separate = 'session', observation = 'trial', sort.observation = T)
# View the RT for each condition in each session together, i.e. plot each participant separately
view.data(ldf = example.trial.data(), group.by = c('ID','session','condition'), view = list(measure = 'RT'), view.together = c('session','condition'))
# Use a histogram plot to show the distribution of RTs for each combination of participant and condition
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'hist', fill = T)
# Do the same with a density plot and add each groupings name to the highest point for easier identification
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'density', add.names = 'top')
# Same, but as violin plot or boxplot. For these two, grouping names are automatically present in the x-axis.
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'violin')
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'box')
# Compare the plots when the grouping and observation are flipped (by.observation = T), such that one becomes the other. Note, that trials are pooled in a particular way: 1 is not a participant's first trial, but a participant's first A trial and B trial, respectively. May or may not be meaningful.
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'violin')
view.data(ldf = example.trial.data(), group.by = c('ID','condition'), view = list(measure = 'RT'), type = 'violin', by.observation = T)
}
\keyword{plotting,}
\keyword{statistics,}
\keyword{visualization}
